[["index.html", "Business Forecasting setup", " Business Forecasting setup All the output formatting is done in the _output.yml file while all bookdown rendering options is done in the _bookdown.yml file.§ library(bookdown) Tips and tricks Referencing This is making a figure with a caption and where we center the figure and set the size. Notice, that the figure is automatically numbered according to the chapter number. plot(pressure,type = &#39;b&#39;,pch = 19) Figure 0.1: A fig Now we are able to make a reference to the chunk. Refer to a chunk: 0.1 Options RMarkdown Reference Guide "],["introduction.html", "1 Introduction", " 1 Introduction "],["curriculum.html", "2 Curriculum", " 2 Curriculum Description of qualifications (Expectations from you): This course will provide you with the ability to: Understand and argue why forecasting is important and discuss different approaches/strategies/principles implemented in the business world. Explain the key difference between qualitative and quantitative methods in forecasting. Reason and argue for which model to use in the face of real-world business situations. Carry out static and dynamic forecasting based on linear regressions and time-series methodology. Evaluate the accuracy of forecast outcomes. Contents: This course is designed to give a solid theoretical and applied background to graduate students in forecasting. Students are expected to have taken Quantitative Research Methods, or an equivalent course that covers regression analysis with a good understanding of the statistical methodology used. The course will not only be a methodology course but equally an applied course in that students will develop skills to approach business life situations critically, evaluate and communicate their findings with ease. The applications that immediately follow the theoretical topics to be taught will cover different business topics including quality control, product demand analysis, marketing and advertising. Tentative Outline of Course Topics: Qualitative Forecasting Methods Quantitative and qualitative forecasting New product forecasting + Executive opinions Sales forces opinions Consumer surveys Delphi method Forecast process, data considerations and model selection Trend, seasonal, cycle and irregular components + Statistical review Correlograms Moving average and exponential smoothing methods Moving average Holt’s and Holt-Winter’s exponential smoothing models + Product demand forecasting Forecasting with static regression methods Bivariate regression model review Forecasting with simple linear trend Serial correlation and heteroskedasticity Time-series decomposition Basic time series decomposition models + Deseasonalizing and seasonal indices Time-series decomposition forecast Applications ARIMA processes and Box-Jenkins methodology Moving average models + Autoregressive models Mixed autoregressive and moving average models Model selection, Box-Jenkins identification process, estimation of ARIMA processes Forecasting seasonal time series Applications Dynamic forecasting of economic and financial time series Nonstationary time series + Cointegration Spurious regression Combining forecast results Some basic theorems on diversification of forecasts + Nelson combination method Granger-Ramanathan combination method Combinations with time-varying weights Applications Forecast evaluation Measures of forecasting accuracy Diebold-Mariano test for significant differences in forecasting accuracies "],["qualitative-forecasting-methods.html", "3 Qualitative Forecasting Methods", " 3 Qualitative Forecasting Methods – HW: Introduction to forecasting – HW: Judgmental Forecasting and Forecast Adjustments – HW: A Review of Basic Statistical Concepts – Armstrong et al. (2000), “Sales Forecasts for Existing Consumer Products and Services: Do Purchase Intentions Contribute to Accuracy?”, International Journal of Forecasting, 16(3), 383-397. – Lawrence et al. (2006), “Judgmental forecasting: A review of progress over the last 25 years”, International Journal of Forecasting, 22, 493-518. – Lynn et al. (1999), “Survey of New Product Forecasting Practices in Industrial High Technology and Low Technology Businesses,” Industrial Marketing Manage- ment, 28, 565-571. – Bass, Frank M. (1969). “A new product growth model for consumer durables,” Management Science, 15, 215-227. "],["judgmental-forecasting-and-forecast-adjustments.html", "3.1 Judgmental Forecasting and Forecast Adjustments", " 3.1 Judgmental Forecasting and Forecast Adjustments A forecast on its own does not include the analysts judgements well enough. To include experts insights, one can apply different methods for this, that is called judgmental forecasting. There er different methods for including experts input on the analysis. See below: The Delphi Method: That is an iterative process where experts makes analysis an predictions independently, then the findings are distributed and then they are able to independently make corrections to their output if they feel to. The results are then distributed and they are possible to correct their output The feedback loop ends when they have reached redundancy and they make no more corrections. Thus, the output is different expert views, that you can select between. Scenario writing: you have different experts that write scenarios that are likely to happen in the future, you rank those events after likelyhood. The scenario writing is followed by discussion. Thus they are able to defend and modify predictions. Combining forecasts: This is where you make different predicte analysis perhaps not including the same predictors, then you use the outputs to compute a forecast, that is done either by finding the mean of the forecasts or assigning weights to the different forecasts that now act as predictors. Forecasting and Neural Networks: NN is used to find its own variables, it is particularly good to fill in missing values. Other tools to judgmental decision making: The decision making tree, where you assign costs and probabilities to events. Bayesian statistics, also where you create a tree of probabilities. "],["articles.html", "3.2 Articles", " 3.2 Articles 3.2.1 A new product growth model for consumer durables,” Management Science The Bass Model i.e. the Bass Curve is the model for sales of new products, or more correct a generalization of the sales for a product, hence he created the model for adopters, where it has later been separated into innovators, early adopters, early majority, etc. that is then the product life cycle. Thus the purpose of the Bass Model is to predict sales of a new product, based on questionnaires or early sales The Bass Curve is based on the early adopters and calculates the curve based on their numbers. The model has proven that it only needs very few observations to plot when it is going to peak and at what amount. Basically the model is based on a conditional likelihood with respect to time. In fact, it has shown to predict peak and sales amount based on research and questionnaires prior to sales Then there are some notes on what further research that can be done and some notes on extensions to the Bass Model 3.2.2 Sales Forecasts for Existing Consumer Products and Services: Do Purchase Intentions Contribute to Accuracy? As we know from the Bass Model we can use consumer intentions (questionnaires about whether a person think he will buy it or not) to guestimate the total sales and when it is going to peak, but are we are able to optimize accuracy of forecasts on existing products using consumer intentions? A previous study has shown, that intentions does not improve the model, although the data did not have available the intentions and whether the person made a purchase or not. In this study there is an improvement to the forecast when the historical data is combined with the intentions of the persons. Also they ruled out, the factor that if the data does not have historical data on intentions and sales history. Hence they experienced on their seven data set, that combining historical data and intentions improved the forecast. To be noted is that the manipulated the intentions in different ways to experiment, e.g. moving average, binary (intentions or not) and some other faucets. 3.2.3 Judgmental forecasting A review of progress over the last 25 years, International Journal of Forecasting This is basically just more information on the judgemental forecasting where they tested different set ups, such as groups, bootsstrapping etc. Did not read all of this, it seemed very much like HW9 "],["exploring-patterns-and-forecasting-techniques.html", "4 Exploring Patterns and Forecasting Techniques", " 4 Exploring Patterns and Forecasting Techniques This chapter will elaborate on how one identify patterns in data thus how to account for this. Thus, we are looking into smoothing methods and moving averages Additionally, we will explore how we select forecasting methods Literature: HW: Exploring Data Patterns and an Introduction to Forecasting Techniques HW: Moving Averages and Smoothing Methods Armstrong, J.S. (2001) “Selecting Forecast Methods”, In Principles of Forecasting: A Handbook for Researchers and Practitioners (Ed. J. Scott Armstrong), Kluwer "],["the-forecasting-process.html", "4.1 The forecasting process", " 4.1 The forecasting process The following describe the forecasting process, hence what one must consider before performing the forecast and ultimately using the forecasts, the purpose of the process is to make sure that the forecast is reliable Specify objectives Reason for the forecast Applications based on the forecast Good communication between all those involved Determine what to forecast Based on set objectives, choose key indicator(s) Example: domestic sales, export sales, or even both? Identify time dimension Length and periodicity of the forecast Desired frequency Urgency of the forecast Planning of the forecast Data considerations Available and quantity of the data Internal vs. external data Desired frequency in data (annual, quarterly, monthly) Example: Dollar sales instead of unit sales Model selection The pattern exhibited by the data The quantity of historic data available The length of the forecast horizon Figure 4.1: Model Selection Model evaluation Testing the models on the series to be forecast Checking how each model works ‘in sample’ Measures such as MSE, RMSE, etc. used to rank models Fit (in sample) vs. accuracy (out of sample) Forecast preparation Based on the selected model, obtain the forecast Keep possibly competing models See if their combination yields mode accuracy Presentation of forecast result Clear communication Keep it as simple as possible Visual aids to support the findings Tracking results Comparison of forecasts to actual values Re-specify the selected model(s) over time if necessary Try other model combinations to keep the accuracy level intact Conclusion: One should realize that it is an iterative process, that one must be aware of. "],["data-patterns-and-terminology.html", "4.2 Data Patterns and terminology", " 4.2 Data Patterns and terminology Basically the data is assumed to consist of up to four components, that is: Trend Long-term change in the level of data Positive vs. negative trends Stationary series have no trend Example: Increasing technology leading to increase in productivity Seasonal Repeated regular variation the level of data Example: Number of tourists in Mallorca Cyclical Wavelike upward and downward movements around the long-term trend Longer duration than seasonal fluctuations Example: Business cycles Note, this is very often to identify Irregular Random fluctuations Possibly carrying more dynamics than just deterministic ones Hardest to capture in a forecasting model The four components may look similar to this: Figure 4.2: Components in a timeseries 4.2.1 Terminology \\(Y_t\\): Denotes a time series variable \\(\\hat{Y_t}\\): Denotes the foretasted value of \\(Y_t\\) \\(e_t=Y_t-\\hat{Y_t}\\): Denotes the residual or the forecast error. \\(Y_{t-k}\\): Denotes a time series variable lagged by k periods. 4.2.1.1 Autocorrelation Autocorrelation: is the correlation between a time series and its past (lagged) observations. To identify this, one can merely compare the lagged values as a series for itself, hence comparing actual time series against the lagged time series. This can be written as: \\[r_k=\\frac{\\sum_{t=k+1}^n\\left(Y_{t\\ }-\\hat{Y}\\right)}{\\sum_{t=1}^n\\left(Y_t-\\hat{Y}\\right)^{^2}}\\] Where \\(k = 0,1,2,...\\), hence take on numbers, typically whole numbers, as the result must be measurable. We assess autocorrelation to identify if the data have a trend, seasons, cycles or it is random? If we have seasons, trends or cycles, we must make the model account for this, otherwise one is prone to have a model where it is just implicitly correlated, but that is merely due to the autocorrelation, as it says in the word, it is automatically correlated, but that also implies, that it is not necessarily caused by the data, but rather other factors, often we see macro factors, that have an influence, e.g. an economic book. Autocorrelation can be plotted using an autocorrelation function (ACF) or merely by using a correlogram, which is a k-period plot of the autocorelation, that looks like the following: Figure 4.3: Correlogram Example Where one wants to be within the upper and lower level. Manually testing for autocorrelation One must: Calculate \\(r_k\\) Calculate \\(SE(r_k)\\) Hypothesis: \\(H0 : \\rho=0\\), \\(H0 : \\rho≠0\\) We apply t-test Where: \\[SE\\left(r_k\\right)=\\sqrt{\\left\\{\\frac{1+2\\sum_{i=1}^{k-1}r_i^2}{n}\\right\\}}\\] Although, with normal approximation \\[SE\\left(r_k\\right)=\\frac{1}{\\sqrt{n-k}}\\] and test statistic equal \\[t=\\frac{r_k}{SE(r_k)}\\] Thence one merely must look up the cut off values and assess if there is statistical evidance for autocorrelation or not. Alternative: Ljung-Box Q statistic The Ljung Box Q is to identify if at least one of the components explains the Y. Thence H0 = p1 = p2 = p3 = pm, thence we want to reject this one. If not, then none of the predictors explain the Y, thus they are irregular components. \\[Q\\ =\\ n\\left(n+2\\right)\\sum_{k=1}^m\\frac{r_k^2}{n-k}\\] Where m is the number of lags to be tested. The Q statistic is commonly used for testing correlation in the residuals of a forecast model and the comparison is mate to \\(X^2_{m-q}\\), where q is the number of parameters in the model. 4.2.1.2 Random vs. correlated data Randomness is important for forecast model residuals. One can write simple random model, but we dont want complete randomness. Hence we don’t want patterns in our error, where the previous error can explain the next error. E.g. if the data contain trend or seasons, that we have not accounted for, then the errors will be able to predict the coming errors (can be tested by testing errors (residuals) against the lagged errors (residuals)). \\[Y_t=c+\\epsilon_t\\] Where c is the component and \\(\\epsilon_t\\) is the random error component. That is assumed to be uncorrelated period to period. 4.2.1.3 Stationary vs. non stationary data Stationary series is not trending, where is non stationary series is trending, can both be linear or exponential. The how is it solved? One can merely apply differencing of order k. That is equal to: \\[\\Delta Y_t=Y_t-Y_{t-1}\\] One could also apply growth rates are log differencing instead. "],["DataPatternsAndModelSelection.html", "4.3 Data Patterns and Model Selection", " 4.3 Data Patterns and Model Selection Here are some examples from the lectures Tend, no cycle, no seasonality Holt’s exponential Smoothing Linear regression with trend Trend, seasonality, cycle Winters’ exponential smoothing Linear regression with trend and seasonal adjustments Causal regression Time-series decomposition Non linear trend, no seasonality, no cycle Non linear regression with trend Causal regression Holt’s exponential smoothing Learn more about the methods in section 9.1, where a collection of performance measures can be found in section 9.2 "],["exercises.html", "4.4 Exercises", " 4.4 Exercises This section contain exercises, hence the methods applied on data 4.4.1 p. 92 HW Problem 8 4.4.1.1 Moving Averages df &lt;- read_excel(&quot;Data/Week45/prob8p92HW.xlsx&quot;) yt &lt;- ts(df) #Rename and define as time series ts.plot(yt) #We can plot the We see that there is a trend in the data. We can calculate the five period moving average by: yt5c &lt;- ma(yt #The time series ,order = 5 #Amount of periods to be evaluated ,centre = TRUE #We want the center value of the MA ) yt5c ## Time Series: ## Start = 1 ## End = 8 ## Frequency = 1 ## [,1] ## [1,] NA ## [2,] NA ## [3,] 212.0 ## [4,] 216.0 ## [5,] 219.0 ## [6,] 221.2 ## [7,] NA ## [8,] NA Hence we are able to produce moving averages based on the data. Notice, that the most recent MA is the prediction, hence being \\(\\hat{Y}_{t+1}\\). One could extend this, by adding this value to the time series and then calculate MA for the period hereafter. We see that the output of the table above is somewhat misleading, as the most recent MA predictinos, are not positioned in the end, but instead where the center actually is. This problem is solvable using filter(). See the following chunk k &lt;- 5 #specify the order of the moving average c &lt;- rep (1/k,k) #remember that simple average is a weighted average with equal weights, #you need to specify weights for the filter command to work yt5&lt;- filter(yt, c, sides = 1) ts.plot(yt5)# &quot;Plotting the MA&#39;s Figure 4.4: 5k Moving Average yt5 #The updated vector of MA&#39;s ## Time Series: ## Start = 1 ## End = 8 ## Frequency = 1 ## [,1] ## [1,] NA ## [2,] NA ## [3,] NA ## [4,] NA ## [5,] 212.0 ## [6,] 216.0 ## [7,] 219.0 ## [8,] 221.2 This we see, that scores are moved to the end, so even though it is the center of the MA, it is now presented as recent values. For simple moving averages, one may do it in excel, it may be easier and quicker. 4.4.1.2 Exponential moving averages + Holts and Winters Simple exponential smoothing Where; alpha is the smoothing parameter, beta tells you if you should account for a trend or not, gamma is responsible for the presence of a seasonal component in the model fit &lt;- HoltWinters(yt ,alpha = 0.4 ,beta = FALSE ,gamma = FALSE) plot(fit,xlim = c(1,nrow(df))) + grid(col = &quot;lightgrey&quot;) ## integer(0) legend(&quot;topleft&quot;,c(&quot;Observed&quot;,&quot;Fitted&quot;),lty = 1,col = c(1:2)) Figure 4.5: Exponential Smoothing Hence we see the smoothed values, where the higher alpha, the more will the fitted line track the changes in the observations. We can now plot the forecast values: plot(forecast(fit),xlim = c(1,nrow(df)+10))# + grid(col = &quot;lightgrey&quot;) legend(&quot;topleft&quot;,c(&quot;Observed&quot;,&quot;Forecast&quot;),lty = 1,col = c(&quot;Black&quot;,&quot;Blue&quot;)) Figure 4.6: Forecast Exponential Smoothing One see the confidence intervals of the forecast widening as we get further away from the actual values. Now one may assess the accuracy: accuracy(forecast(fit)) ## ME RMSE MAE MPE MAPE MASE ACF1 ## Training set 8.001509 8.209102 8.001509 3.673623 3.673623 2.154252 0.1962194 One see an RMSE of 8.2. Hence one could compare it with an exponential smoothing, which is more sensitive to the observations. fit0.6 &lt;- HoltWinters(yt ,alpha = 0.6 #Changed ,beta = FALSE ,gamma = FALSE) accuracy(forecast(fit0.6)) ## ME RMSE MAE MPE MAPE MASE ACF1 ## Training set 5.860023 6.373698 5.860023 2.700235 2.700235 1.577698 0.264614 Where we see an RMSE of 6.37, hence lower than the initial test. Holt’s exponential smoothing exponential smoothing when a trend component is present: beta = TRUE {fit3 &lt;- HoltWinters(yt ,alpha = 0.6 ,beta = TRUE ,gamma = FALSE) plot(forecast(fit3)) accuracy(forecast(fit3))} Figure 4.7: Holt’s Exponential Smoothing ## ME RMSE MAE MPE MAPE MASE ACF1 ## Training set -1.990133 4.369207 3.451467 -0.9324372 1.581919 0.929241 0.4352197 We see that the RMSE is even lower (4.37). Which is expected, as Holt’s exponential smoothing accounts for trend. Winter’s Exponential Smoothing Which accounts for trend and seasonality in order to make it work one needs to define the frequency of your seasonal component, when specifying the ts data {yt &lt;- ts(df ,frequency = 4) # let&#39;s assume we suspect a quarterly pattern fit4 &lt;- HoltWinters(yt, alpha=0.6, beta=TRUE, gamma=TRUE) plot(forecast(fit4)) accuracy(forecast(fit4))} # experiment with seasonality frequency to see if you can get any lower in MSE ## ME RMSE MAE MPE MAPE MASE ## Training set -0.310075 3.973148 3.34445 -0.1227802 1.50834 0.2730163 ## ACF1 ## Training set 0.009251985 We see that the RMSE is even lower (3.97), hence Winters Exponential Smoothing appear to be the best model for prediction. 4.4.2 p. 93 HW Problem 9-10 Basically just another example of the exercise above. 4.4.3 CO2 and Sales Data Not done again. Do if time allows. 4.4.4 Case 6 oo. 108-111 HW Not done again. Do if time allows. "],["simple-and-multiple-linear-regression.html", "5 Simple and Multiple Linear Regression", " 5 Simple and Multiple Linear Regression This chapter elaborates on how linear regression may be applied to forecast data and also how we may get rid of trends when applying linear regression and assesing the assumptions for the model. Lastly, the chapter elaborates on how to chose a model Lectures 5th lecture - simple linear regression 6th lecture - multiple linear regression Literature HW: Simple Linear Regression How to write business reports - https://www.victoria.ac.nz/vbs/teaching/resources/VBS-Report-Writing-Guide-2017.pdf "],["simple-linear-regression.html", "5.1 Simple Linear Regression", " 5.1 Simple Linear Regression I will not go much in details with what simple linaer regression is. One can calculate the beta values by the following \\[\\begin{equation} b_0=\\ \\overline{Y}-\\ b_1\\overline{X} \\tag{5.1} \\end{equation}\\] \\[\\begin{equation} b_1=\\frac{\\sum_{ }^{ }\\left(X-\\overline{X}\\right)\\left(Y-\\overline{Y}\\right)}{\\sum_{ }^{ }\\left(X-\\overline{X}\\right)^{^2}} \\tag{5.2} \\end{equation}\\] Where point forecast, hence \\(\\hat{Y}\\) is merely the sum of the linear equation, hence \\(\\hat{Y}=b_0+b_1X^*\\), where \\(X^*\\) is the specific X values. Thence one can estimate the standard error by: \\[\\begin{equation} s_{yx}=\\sqrt{\\frac{\\sum_{ }^{ }\\left(Y-\\overline{Y}\\right)^{^2}}{n-2}} \\tag{5.3} \\end{equation}\\] Equations (5.3) can also be written otherwise, see the slides for that. The residuals can be broken down to the following \\[\\begin{equation} \\sum_{ }^{ }\\left(Y-\\overline{Y}\\right)^{^2}=\\sum_{ }^{ }\\left(\\hat{Y}-\\ \\overline{Y}\\right)^{^2}+\\sum_{ }^{ }\\left(Y-\\ \\hat{Y}\\right)^{^2} \\tag{5.4} \\end{equation}\\] Which consist of the following three elements. \\[\\begin{equation} SST = SSR + SSE \\tag{5.5} \\end{equation}\\] The residuals can then be applied for a goodness of fit assessment, where one can identify R squared- \\[\\begin{equation} R^2=\\frac{SSR}{SST} \\tag{5.5} \\end{equation}\\] So what can the linear regression then be used for? Inference Prediction Notice, that inference can only be done when the model is adequate, hence the assumptions actually being met. 5.1.1 Assumptions We have the following assumptions for a linear model: The underlying relationship between dependent and independent variable is actually linear Independent residuals Homoskedastic residuals (show constant variance) Identically distributed (In general, normal distribution is assumed) Hence how is the assumptions tested? Some can be done before analysis and others after the model is applied, hence it can be described by the following: Before the model is applied: The underlying relationship between dependent and independent variable is actually linear After the model is applied (doing diagnostics): Independent residuals Homoskedastic residuals (show constant variance) Identically distributed (In general, normal distribution is assumed) Now lets dive into the data Serial correlation and Heteroskedasticity Notice that autocorrelation = serial correlation Serial correlation is where the observations are trailing each other, where heteroskedasticity is where the variance is changing over timer: 5.1.1.1 Serial correlation (checking for independent residuals): We must make sure that the residuals does not have a clear pattern, as that means that some variables has been omitted. This can be assessed for example by: Visual inspection Durbin Watson test, see equation (5.6) Correlogram Statistical test for relationship between residuals and lagged residuals Figure 5.1: Serial Correlation Example Notice, that one should also test for autocorrelation in the errors, that can be done with a Durbin-Watson statistic: \\[\\begin{equation} DW\\ =\\frac{\\sum_{ }^{ }\\left(e_t-e_{t-1}\\right)^{^2}}{\\sum_{ }^{ }e_t^{^2}} \\tag{5.6} \\end{equation}\\] 0 &lt; DW &lt; 4, where if DW = 2 it indicates no serial correlation (this is the ideal), generally if 1.5 &lt; DW &lt; 2.5 is widely used as an acceptable level. If DW &gt; 2, it indicates negative serial correlation and if DW &lt; 2, it indicates that there is positive serial correlation. One could also use correlation testing by checking correlogram of residuals or testing residuals against lagged residuals Solution Try with lagging the variables 5.1.1.2 Heteroskedasticity: We want the variance to have a constant variance. This can be checked visually, where we dont want to see a funnel shape, as in the visualization below. Figure 5.2: Heteroskedasticity Example This can also be tested with a Breusch-Pagan Test, where the null hypothesis is that all errors are equal, hence null hypothesis, is that the errors are homoskedastic. Solution Try lagging the variables Try applying differences in the observations If one observe heteroskedasticity and can’t get rid of it, then one can apply a generalized least squares method. Although this introduce a set of new assumptions. 5.1.2 Forecasting with a linear trend If the data contain a linear trend, then we are able to make the model account for this trend. Hence we are able to detrend the data, by including a counter as a variable. Another solution may be to using the differences in the observations, e.g., using growth rates. This is important, as if one don’t detrend the data, then the model will merely describe the trend and not the actual values behind the trend, thus you want the model to account for the trend 5.1.3 Exercises 5.1.3.1 Problems 5 pp. 209 df &lt;- read_excel(&quot;Data/Week46/prob5p209.xlsx&quot;) plot(x = df$Age,y = df$MaintenanceCost,) + grid(col = &quot;lightgrey&quot;) + abline(reg = lm(MaintenanceCost ~ Age,data = df)) ## integer(0) coef(object = lm(MaintenanceCost ~ Age,data = df)) ## (Intercept) Age ## 208.20335 70.91813 If age is the dependent variable We see that the intercept is - 1.78, indicating that if there are no maintenance costs, then the age of the vehicle is -1.78 years old, which is naturally not possible, hence we see that the linear relathionship indicates that there will always be maintenance costs. If maintenance cost is the dependent variable We see that the intercept is 208, hence there will be a begin maintenance of 208, which will always be there, and then for each year, it is expected to increase with about 71. We can then test to see if the relationship is significant from a statistic point of view. lm(Age ~ .,data = df) %&gt;% summary() ## ## Call: ## lm(formula = Age ~ ., data = df) ## ## Residuals: ## Min 1Q Median 3Q Max ## -1.6658 -1.0498 -0.7737 1.0125 2.0119 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) -1.789563 1.268264 -1.411 0.201098 ## MaintenanceCost 0.012398 0.001737 7.139 0.000187 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 1.476 on 7 degrees of freedom ## Multiple R-squared: 0.8792, Adjusted R-squared: 0.862 ## F-statistic: 50.96 on 1 and 7 DF, p-value: 0.0001872 We see that there is statistical evidence to say that the relationship is linear. Also the coefficient of determination is 86% hence 86 of the variance is explained by the x variable. Now we can do the diagnostics: plot(lm(Age ~ .,data = df)) Before the model is applied: The underlying relationship between dependent and independent variable is actually linear, This we must assume After the model is applied (doing diagnostics): Independent residuals We dont say any indication that the residuals are not independent. Homoskedastic residuals (show constant variance) The variance appear to be constant Identically distributed (In general, normal distribution is assumed) This we must assume rm(list = ls()) 5.1.3.2 Problem 11 p. 212 HW 5.1.3.3 Cases 2 HW Notice that the X is deviations from 65 degrees, as 65 degrees is the ideal for the production, hence when one read 10 degrees, then it is in fact 75 degrees or 55. Notice that the deviation is in absolut values. df &lt;- read_excel(&quot;Data/Week46/Case2p222.xlsx&quot;) #head(df) #To see the first observations in each Y &lt;- df$Y X &lt;- df$X scatter.smooth(x=X, y=Y, main=&quot;Y ~ X&quot;) Figure 5.3: Plotting the model cor(Y, X) ## [1] -0.8010968 We see that the correlation is negative, hence -0.8 linMod &lt;- lm(Y ~ X) #To omit intercept when necessary, the formula can be written for example as lm(cost ~ age - 1) summary(linMod) ## ## Call: ## lm(formula = Y ~ X) ## ## Residuals: ## Min 1Q Median 3Q Max ## -91.38 -43.83 -12.64 44.48 122.25 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 552.040 22.851 24.158 &lt; 2e-16 *** ## X -8.911 1.453 -6.133 4.37e-06 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 59.41 on 21 degrees of freedom ## Multiple R-squared: 0.6418, Adjusted R-squared: 0.6247 ## F-statistic: 37.62 on 1 and 21 DF, p-value: 4.374e-06 We see an R square of 62.47 indicating that the linear relationship is not describing the relationship in the sample data very well, which the illustration above also show quite well. plot(resid(linMod)) Figure 5.4: Residuals Case 2 Now we can assess if the data show autocorrelation. That can be done by using the acf() acf(resid(linMod)) # white noise residuals? Figure 5.5: Correlogram The data appear to show white noise, although there appear to be some pattern, which may show seasons in the data. We can test to see if the residuals actually show constant variance, of the variance is not constant (heteroskedasticity) bptest(linMod) # Breusch-Pagan test H_0: variance is constant. ## ## studentized Breusch-Pagan test ## ## data: linMod ## BP = 1.069, df = 1, p-value = 0.3012 Since the p value is not significant, there is not enough evidance to reject the null hypothesis, hence we may assume that the residuals show constant variance. { AIC(linMod) %&gt;% print() BIC(linMod) %&gt;% print()} ## [1] 257.0604 ## [1] 260.4669 We see the different information criteria, but we need other models to assess what is good and what is bad. Q1 How many units would your forecast for a day in which the high temperatire is 80 degrees a &lt;- data.frame(X=24) #65+24=89 degrees predict(linMod, a) %&gt;% print() ## 1 ## 338.1778 Hence we may expect 338 units to be produced on a day with 89 degrees. Q2 When the degrees is 41, hence also a deviation of 24 degrees. Q3 Is the forecasting tool effective? We saw earlier that 80% of the variance is explained, although there is probably room for optimization rm(list = ls()) 5.1.3.4 Case 3 from HW df &lt;- read_excel(&quot;Data/Week46/Case2p222.xlsx&quot;) #head(df) #To see the first observations in each Y &lt;- df$Y X &lt;- df$X plot(X,Y) cor(Y, X) ## [1] -0.8010968 We see that the correlation is negative, hence -0.8 cor.test(Y,X) ## ## Pearson&#39;s product-moment correlation ## ## data: Y and X ## t = -6.1335, df = 21, p-value = 4.374e-06 ## alternative hypothesis: true correlation is not equal to 0 ## 95 percent confidence interval: ## -0.9121082 -0.5806250 ## sample estimates: ## cor ## -0.8010968 5.1.3.5 Detrending thorugh regression: CO2 CO2levels &lt;- read_excel(&quot;Data/Week46/CO2levels(1).xlsx&quot;) y &lt;- ts(CO2levels, frequency = 12) #Monthly series, so we specify the frequency=12. trend &lt;- seq(1:length(y)) #Creating the linear trend, simply a counter plot(y) Figure 5.6: CO2 data We see that there is a trend and cycles. This we want to get rid of, by enabling the model to account for that. fit &lt;- lm(y ~ trend) summary(fit) ## ## Call: ## lm(formula = y ~ trend) ## ## Residuals: ## Min 1Q Median 3Q Max ## -4.392 -1.866 0.199 2.190 3.677 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 3.293e+02 3.462e-01 951.40 &lt;2e-16 *** ## trend 1.210e-01 3.707e-03 32.64 &lt;2e-16 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 2.186 on 159 degrees of freedom ## Multiple R-squared: 0.8701, Adjusted R-squared: 0.8693 ## F-statistic: 1065 on 1 and 159 DF, p-value: &lt; 2.2e-16 ystar &lt;- resid(fit) #ystar is the detrended series, which is simply the residuals from the previous regression. plot(ystar) + lines(ystar, col=&quot;red&quot;) Figure 5.7: Detrended series ## integer(0) Now wee see that the data show constant variance and appear to be stationary around a mean of 0. But did we get rid of the seasonality? To compare, one can print the detrended and the initial data. par(mfrow = c(2,1)) acf(y, 50) acf(x = ystar,lag.max = 50) #We can specify how many lags we want to plot. Here I just chose 50. Figure 5.8: Correlogram comparison detrended Hence we see that we got rid of the trend, but still see that there is great seasonality in the data. Alternative to detrending –&gt; differencing An alternative to detrending with the trend variable, is to using differencing dy &lt;- diff(x = y,lag = 1) plot(dy) # Figure 5.9: Detrending using differencing acf(dy, 50) Figure 5.10: Detrending using differencing "],["multiple-linear-regression.html", "5.2 Multiple Linear Regression", " 5.2 Multiple Linear Regression Simply regression with more than one independent variable. The diagnostics tools are the same as before, significance testing, R square, DW stats, residuals diagnostics. 5.2.1 Multicollinearity Although in MLR one must be aware of multicollinearity, meaning that do we see a strong relationship between independent variables, hence are they explaining the same? To assess for multicollinearity one can apply VIF, which is the following: \\[\\begin{equation} VIF_j=\\frac{1}{1-R_j^2} \\tag{5.7} \\end{equation}\\] Where \\(j = 1,...,k\\) Thus, we see that Rsquare is obtained from regression each IDV against the remaining variables. We can then have the following outputs: VIF = 1, no milticollinearity VIF &gt; 10, indicates multicollinearity If one gets an indication of multicollinearity, then one should drop one of the correlated variables. 5.2.2 Serial correlation and omitted variables When doing regression, we may observe that the IDVs are correlated with the error term, meaning that the errors are not randomly distributed, hence serial correlation in the error terms. For serial correlation in the error terms, we are able to make use of the Durbin-Watson, see (5.6). 5.2.3 Selection criteria We cannot use R square anymore, as it will never really penalize when we are adding variables. Hence one should use&gt; AIC BIC Depending on whether one is interested in the best model for prediction or the true model. "],["time-series-decomposition-and-regression-with-time-series-data.html", "6 Time-Series Decomposition and Regression with Time-Series Data", " 6 Time-Series Decomposition and Regression with Time-Series Data This chapter identifies what elements a time series can be broken into, hence it elaborates on the trend, seasonality, cycles and irregular movements Literature HW: Time Series and Their Components HW: Regression with Time Series Data "],["time-series-and-their-components-hw.html", "6.1 Time Series and Their Components (HW)", " 6.1 Time Series and Their Components (HW) Basically a Time Series is variables that are collected over time. The variables are highly likely to have autocorrelation Autocorellation: Variables are automatically dependant on each other over time, and the mere aspect of these synergies (patterns) where one will often be able to prove correlation between the variables One approach to assessing time series is by decomposing the patterns by finding the components hereof, these are: Trend(T): if it is linear, then it can be explained by \\(\\hat{T}_t=\\beta_0+\\beta_1t\\), hence we apply the linear function, hence what in statistics is \\(\\hat{y}=\\hat{T}\\) in time series Cyclical(T or C)Note, often included in practice as the trend, as it can be difficult to extinguish Seasonal(S) Irregular(random)(I) The purpose of decomposing the time series data, can be either for exploration or prediction. Hence you can estimate the coefficients of the components by breaking down the data. Although the typical purpose of time series is exploration of the data and assess if there are seasons, trends etc. and perhaps to pinpoint whether you are above or below the season/trend/cycle. If the Y observations is the sum of the components, then we have additive model, if they are the product of the components, then it is called multiplicative model Time series is typically an additive model, if the variance is more or less the same, it is a multiplicative model if the variance increases with time Note, one can transform a multiplicative model to an additive model by taking the logarithm 6.1.1 Additional on trend Quadratic trend e.g. where we have curvature \\[\\hat{T}_t=\\beta_0+\\beta_1t+\\beta_1t^2\\] Exponential trend e.g. exponentially growing population \\[\\hat{T}_t=\\beta_0*\\beta_2^t\\] NOTE, one may transform this into a logistic trend instead, as continuous exponential trend is not typical 6.1.2 Additional on seasonal pattern One can manually rule out seasonality by adding seasonal index (that is hard coding the expected index in the respective periods) One must rule out other factors before doing this! Seasonally adjusted data For additive \\[Y_t - S_t = T_t + I_t\\] For multiplicative \\[\\frac{Y_t}{S_t} = T_t * I_t\\] One does often take out seasonality to better compare data and also create short term forecasts. 6.1.3 Cyclical and Irregular Variations One can often rule out (or at least smooth out) irregularities by taking the moving average "],["regression-with-time-series-data.html", "6.2 Regression with time series data", " 6.2 Regression with time series data One of the assumptions for regression models, is that the errors are independent (uncorrelated), THAT IS RARELY THE CASE WITH TIME SERIES. Hence one must be very precautions. "],["the-success-criteria-and-process.html", "6.3 The success criteria and process", " 6.3 The success criteria and process The following elaborates on success criteria and the process 6.3.1 Success Criteria Ultimately we want to be able to answer the following: Do we have trend? Do we have cyclical movements? Do we have seasons? Do we have autocorellation (elaborated in section 6.3.3)? If yes: If RHO = 1, then we can take first differences If RHO &lt;&gt; 1, then we can do the generalized differences., thus implies the following: Do an OLS and get the residuals Use the residuals in the following equation \\(e_t=\\rho e_{t-1}+ \\sigma_t\\), using OLS as estimated rho (\\(\\hat{\\rho}\\)) If rho = 0, then 0 autocorellation 6.3.2 The Process Deseasonalizing and detrending based on moving averages and accounting for cyclical moves Note, if you do not have seasonality, then jump to section 2. trend etc. 6.3.2.1 Desaesonalizing Remove the short-term fluctuations If we have even number of periods, one must center the data. Whith odd period numbers, you can merely center with the period in the middle. The procedure with even number of periods is the following: 1. Find the MA_t with equation (6.1) and (6.2) \\[\\begin{equation} MA_t = \\frac{(Y_{t-2}+Y_{t-1}+Y_{t}+Y_{t+1}+)}{4} \\tag{6.1} \\end{equation}\\] and \\[\\begin{equation} MA_{t+1} = \\frac{(Y_{t-1}+Y_{t}+Y_{t+1}+Y_{t+2}+)}{4} \\tag{6.2} \\end{equation}\\] Note, that the MA for each is centered in the center and rounded up to the coming period 2. Then find the centered MA Then do the average of the two periods, which will find the actual center: \\[\\begin{equation} CMA_t=\\frac{(MA_t+MA_{t+1})}{2} \\tag{6.3} \\end{equation}\\] Notice, that the example is with quarterly MA, hence the MAs are divided with 4, this could have been monthly and then onw would divide by 12. \\(CMA_t\\) is representing the depersonalized data. One can find the seasonal factor by saying \\[\\begin{equation} SF_t=\\frac{Y_t}{CMA_t} \\tag{6.4} \\end{equation}\\] This explains whether one as above or below the expect season level. CONCLUSION: IF \\(SF_t &gt; 1\\), then Y is greater than the quarterly (or what other period is used) average or, \\(SF_t &lt; 1\\), then the Y is less than the quarterly average Alternative, deseasonalizing data can be done by dividing the raw data with some seasonal index, that is adding dummy variables for the periods. Although by using the index, one assume, that the same seasonality is the same as preivous periods. 6.3.2.2 Long-term trend Long-term trend, this is estimated from the deseasonalized data. This is estimated using simple linear regression. Basically the detrended data consists of the residuals between the actual data and the estimated data by using the trend variable (the counter 1 to n). Task 1 We must find out if the trend is linear or quadratic. Linear: \\(C\\hat{M}A_t=f(t)=\\beta_0 + \\beta_1t\\) Quadratic: \\(C\\hat{M}A_t=f(t)=\\beta_0 + \\beta_1t+\\beta_2t^2\\) Where \\(t\\) is the time indicator and 1 = the first observation and increases by 1 thereafter. Now we have obtained the centered moving-average trend \\[\\begin{equation} CMAT = C\\hat{M}A \\tag{6.5} \\end{equation}\\] 6.3.2.3 Cyclical Component Cyclical component, one can compare the CMA with the CMAT to find the cyclical factor. Thus, the cyclical factor is: \\[\\begin{equation} CF = \\frac{CMA}{CMAT} (\\#CF) \\end{equation}\\] If CF &gt; 1, the deseasonalised value is above the long-term trend of the data. If the opposite, then below. 6.3.2.4 Time-Series decomposition forecast Now we can do the reverse procedure, using the factors, that we have just found. The reverse procedure is assembling the predicted Y based on the factors that have just been found. \\[\\begin{equation} \\hat{Y}=CMAT*SI*CF*I \\tag{6.6} \\end{equation}\\] Where, CMAT = T, S is the SF, CF is the CF and I is the irregular component (this is assumed to be 1 given its random nature, if one expects a boom or shock, this can be modeled with) 6.3.3 Autocorellation ALWAYS ALWAYS CHECK FOR AUTOCORRELATION. What to do? You are missing some variable, find the missing variable(s). In practice this can be very difficult. Do differencing Use autoregressive model approach, where you are using lagged variables as variables to predict the coming period We are going to talk about ARIMA (The box and jenkins methodology, more about this in section 7) If our residuals have autocorelation, it means that there is some relationship in the model, that our model does not account four. In worst case, we can end up ‘proving’ some relationships between variables, that are in fact not true, but it is rather autocorellation that is proving the model, and the not the relationship between the variables and the dependent variables. "],["exercises-2.html", "6.4 Exercises", " 6.4 Exercises 6.4.1 Alomega Food Stores, case 6 p. 166 + case 7 p. 348 y &lt;- read_excel(&quot;Data/Week47/Alomegafoodstores.xlsx&quot;) str(y) ## tibble [48 × 21] (S3: tbl_df/tbl/data.frame) ## $ Sales : num [1:48] 425075 315305 432101 357191 347874 ... ## $ Paper : num [1:48] 75253 15036 134440 119740 135590 ... ## $ TV : num [1:48] 114433 63599 64988 66842 39626 ... ## $ Month : num [1:48] 1 2 3 4 5 6 7 8 9 10 ... ## $ Dum1 : num [1:48] 1 0 0 0 0 0 0 0 0 0 ... ## $ Dum2 : num [1:48] 0 1 0 0 0 0 0 0 0 0 ... ## $ Dum3 : num [1:48] 0 0 1 0 0 0 0 0 0 0 ... ## $ Dum4 : num [1:48] 0 0 0 1 0 0 0 0 0 0 ... ## $ Dum5 : num [1:48] 0 0 0 0 1 0 0 0 0 0 ... ## $ Dum6 : num [1:48] 0 0 0 0 0 1 0 0 0 0 ... ## $ Dum7 : num [1:48] 0 0 0 0 0 0 1 0 0 0 ... ## $ Dum8 : num [1:48] 0 0 0 0 0 0 0 1 0 0 ... ## $ Dum9 : num [1:48] 0 0 0 0 0 0 0 0 1 0 ... ## $ Dum10 : num [1:48] 0 0 0 0 0 0 0 0 0 1 ... ## $ Dum11 : num [1:48] 0 0 0 0 0 0 0 0 0 0 ... ## $ Paper1: num [1:48] 220 75253 15036 134440 119740 ... ## $ Paper2: num [1:48] 5 220 75253 15036 134440 ... ## $ TV1 : num [1:48] 88218 114433 63599 64988 66842 ... ## $ TV2 : num [1:48] 76001 88218 114423 63599 64988 ... ## $ M01-48: num [1:48] 1 2 3 4 5 6 7 8 9 10 ... ## $ Compet: num [1:48] 1 2 2 1 2 3 3 2 3 3 ... We see that there are 21 variables, where sales is the DV and all others are IDVs, consisting of continous and factors. Now we are interested in constructing a time series, which consist of the dependent variable. That is done in the following: y &lt;- ts(data = y$Sales #The dependent variable ,end = c(2006,12) #The end date ,frequency = 12 #The frequency, 12 as we are working with months ) options(scipen = 999) plot(y) Figure 6.1: Time series Alomega Food Now we want to address if there is: Trend: visually it does not look like. But it will be tested by testing the time series against a trend variable Seasons: Cycles: THis is difficult to say, also as we only have data for four years Trend #Creating trend variable trend &lt;- seq(from = 1,to = length(y),by = 1) #Creating a linear model with the trend variable lm.fit &lt;- lm(y ~ trend) summary(lm.fit) ## ## Call: ## lm(formula = y ~ trend) ## ## Residuals: ## Min 1Q Median 3Q Max ## -200465 -84502 -13613 71381 333683 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 350840 37726 9.300 0.00000000000389 *** ## trend 1335 1340 0.996 0.325 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 128600 on 46 degrees of freedom ## Multiple R-squared: 0.0211, Adjusted R-squared: -0.0001811 ## F-statistic: 0.9915 on 1 and 46 DF, p-value: 0.3246 We see that the trend variable appear to be non significant, hence there is not enough evidence to reject the null hypothesis, being that there is no relationship between the dependent- and independent variable. accuracy(object = lm.fit #The fitted values from the linear model ,y = y #The actual value ) ## ME RMSE MAE MPE MAPE MASE ## Training set -0.000000000002425023 125940.3 99341.6 -10.69473 28.49834 0.992719 We see the RMSE of 125.940, this can also be plotted to see the fitted values against the residuals, where the mean absolute error is just below 100.000 units. Notice, that this test in done in sample. plot(x = lm.fit$fitted.values,y = lm.fit$residuals,main = &quot;Resduals plot&quot;) + grid(col = &quot;lightgrey&quot;) + abline(h = 0,lty = 3,col = &quot;blue&quot;) Figure 6.2: Residuals plot ## integer(0) 6.4.1.1 What might Jackson Tilson say about the forecasts? With mean average percentage error of 28%, the forecast may not be super good. Although it was shown, that there is statistical evidence for the model being significant. Hence, we must try to convince him, that it does in fact contribute with some knowledge. What other forecast methods could be used? E.g., smoothing or moving averages. 6.4.1.2 P.348 Case 7 (Alomega Food Stores) This is an extension of the case above. It has questions regarding what other things she might do. How is Julie sure that it is the right predictors We see on page 348, that some of the variables has a p-vale that is above the 5 percent level, hence there is a greater risk, that there is no statistical evidence for a relationship between the individual variables and the dependent variable. Also changes in VIF for the variables, although none are close to 10 and according to the rule of thumb, there is no indication of multicollinearity How would you sell the model Focus on how it prepares them for future changes, planning staffing, procurement, etc. How may the model indicate future advertizing? We see that it makes sense to spend money on all three types of advertisements. What conditions to be aware of? Autocorrelation in the error terms? Multicollinearity Other models that could be used? ARIMA Smoothing rm(list = ls()) 6.4.2 Monthly Sales Data Loading the data and storing only the y variable as a timeseries df &lt;- read_excel(&quot;Data/Week47/Salesdataseasonal.xlsx&quot;) y &lt;- ts(df$Sales ,frequency = 12 #Monthly data ,start = c(1979,1) #start year 1971 month 1 ) #Plotting for visual interpretation plot(y) Figure 6.3: Visual interpretation Goal: Seasonal dummies Trend variable Hereafter different approaches to decomposing data is presented OLS using seasonal dummies and trend variable Decomposition using decompose() Using CMA (centered moving averages) a. finding seasonal dummies Finding seasonal dummies using a trend #Creting matrix of dummies for each month month &lt;- seasonaldummy(x = y) This can be shown with the following table Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 We see that a matrix has been created identifying what month each period belongs to. b. finding the trend variable In addition hereof, we must create a trend variable to account for the trend: trend &lt;- seq(1,to = length(y),by = 1) 1. OLS using seasonal dummies and trend variable #Constructing linear model lmmod &lt;- lm(y ~ month + trend) summary(lmmod) ## ## Call: ## lm(formula = y ~ month + trend) ## ## Residuals: ## Min 1Q Median 3Q Max ## -41.782 -17.094 -3.591 15.140 91.349 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 84.01705 8.51294 9.869 &lt; 0.0000000000000002 *** ## monthJan 5.78164 10.54471 0.548 0.5844 ## monthFeb 42.89804 10.54352 4.069 0.00008250119327 *** ## monthMar 79.84777 10.54259 7.574 0.00000000000656 *** ## monthApr 76.88084 10.54192 7.293 0.00000000002882 *** ## monthMay 25.49724 10.54153 2.419 0.0170 * ## monthJun -13.05303 10.54139 -1.238 0.2179 ## monthJul -49.51997 10.54153 -4.698 0.00000673141501 *** ## monthAug -23.23690 10.54192 -2.204 0.0293 * ## monthSep -17.94010 10.76929 -1.666 0.0982 . ## monthOct -28.56613 10.76864 -2.653 0.0090 ** ## monthNov 5.80784 10.76825 0.539 0.5906 ## trend 2.71693 0.05288 51.383 &lt; 0.0000000000000002 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 25.25 on 127 degrees of freedom ## Multiple R-squared: 0.9586, Adjusted R-squared: 0.9547 ## F-statistic: 245 on 12 and 127 DF, p-value: &lt; 0.00000000000000022 What can we deduct from this? January, June, September and November are not significant on the 5% level in the full model. Hence the dummies may not explain the sales for these months There is overwhelming evidence for trend being present in the data Lets now look into the fitted values and plot {#Plotting fitted values plot(lmmod$fitted.values,main = &#39;Fitted values&#39;,ylab = &#39;Sales&#39;) + lines(lmmod$fitted.values,col = &#39;red&#39;) + grid(col = &#39;lightgrey&#39;) #Plotting residuals plot(lmmod$residuals,main = &#39;Residuals&#39;,ylab = &#39;Residuals&#39;) + lines(lmmod$residuals,col = &#39;green&#39;) + grid(col = &#39;lightgrey&#39;)} ## integer(0) 2. Decomposition using decompose() The following is able to decompose the series based on assuming additivity and multiplicative relationship. Although as we see that the variance is increasing over time, then one may expect that the multiplicative approach is more appropriate. #Additive decompSalesAdd &lt;- decompose(x = y #The timeseries ,type = &quot;additive&quot;) #for additive decomposition #Plotting plot(decompSalesAdd) Figure 6.4: Additive decomposition #Multiplicative decompSalesMult &lt;- decompose(x = y #The timeseries ,type = &quot;multiplicative&quot;) #for multiplicative decomposition #Plotting plot(decompSalesMult) 3. CMA see process in 6.3.2 Find the MA_t with equation (6.1) and (6.2) = Deseasonalizing data #Finding centered MA CMA &lt;- ma(x = y #The time series ,order = 12 #We want the average of 12 periods ,centre = TRUE) #As order is equal, then we want to make a centered MA plot(CMA) Figure 6.5: CMA We see that the centered moving averages have removed the seasons from the data. But there is clearly still a trend. We are now able to estimate the trend using the deseasonalized data with with trend variable. Just as we would deseasonalize any other data!! Then find the centered MA (CMAT) = detrending data #Detrending data linmod &lt;- lm(CMA ~ trend ,na.action = &quot;na.exclude&quot;) #We want to remove rows with NAs # NOTE: we dont really care about the model, we only want the fitted values # as they represent the estimated linear trend #Estimated trend CMAT &lt;- linmod$fitted.values #Extracting trend estimates and saving in an object plot(CMAT) Figure 6.6: Cycle With the deseasonalized data and the trend estimates, we are able to assess whether we are above or below the trend in all of deseasonalized data. The cycle #Identifying the cycle Cycle &lt;- na.exclude(CMA) / CMAT ts.plot(Cycle) abline(h=1, col = &quot;red&quot;) Figure 6.7: Cycle Now we see the whether we are above or below the trend in the respective periods, e.g., period 60 appear to be far below the trend level indicating it is a the lowest of the seasons. "],["ARIMA.html", "7 ARIMA Models and Box-Jenkins Methodology", " 7 ARIMA Models and Box-Jenkins Methodology Explanation here Considering a single time series \\(Y_t\\), the interest is in determining the relationship between \\(Y_t\\) and its past. Literature HW: The Box-Jenkins (ARIMA) Methodology "],["ARIMAΗ2.html", "7.1 ARIMA", " 7.1 ARIMA Basically it is a framework for adding AR and or MA into the regression model, where: AR: A time-series is predicted using its own history, can be explained by: \\(Y_t=β_0+β_1Y_{t-1}+ε_1\\) MA: Model predicts based on current and past shocks to the series. An MA(q) model: \\(Y_t=\\mu+\\epsilon_t-\\omega_1\\ \\epsilon_{e-1}-...-\\omega_q\\ \\epsilon_{e-q}\\) It is important to notice, that it is not by default an advantage of including both methods, but one should select the appropriate method depending on the looks corellogram Key concepts ARMA that is the approach to stationary data. If the data is nonstationary, one must make the data stationary by differencing. leading to ARIMA. Hence: ARMA: When we have stationarity ARIMA: When we have non-stationarity The notations for ARIMA are: \\[ARIMA_{(p,d,q)}\\] Where: p = the order of AR d = the order of differencing (NOTE: if this is 0, then the model is reduced to an ARMA model) q = the order of MA, hence if q = 2, then MA for \\(t_{-1}\\) and \\(t_{-2}\\) is included in the regression model. 7.1.1 Elaborating on AR models AR = Autoregressive AR models are appropriate with stationary data This makes sense, as if the data is non stationary (where the variance is constant) This can generalized with AR(p), where p = the order of AR, meaning how many prior periods to \\(Y_t\\) to be included. Then how do we select an apporpriate number of lags? The autocorrelation function (ACF): selection criteria: the ACF should decline to zero exponentially fast The partial autocorelation function (PACF) See the full equation on page 360. Process: Select order of p Calculate coefficients for each lagged period Forecast using the coefficients Evaluate constantly if the coefficients are still applicable Assumptions Data is stationary. If not, then one must deal with that 7.1.2 Elaborating on MA models MA = Moving average IMPORTANT NOTE: this has nothing to do with regular Moving Average, as with using past periods This approach applies use residuals (between actual values and fitted values/or forecasted values) multiplied with a coefficient to forecast the coming period. As with AR, we are able to include x amount of previous periods. Thus, we are able to describe MA with: \\(Y_t=\\mu+\\epsilon_t-\\omega_1\\epsilon_{t-1}-\\omega_2\\epsilon_{t-2}-...-\\omega_q\\epsilon_{t-q}\\) (#eq:MA(q)) \\end{equation} where: \\(Y_t\\) = the forecast for time period t. \\(\\mu\\) = just a constant that is applied in the calculation \\(\\epsilon_t\\) = the error term as in any other regression \\(\\omega\\) = the coefficients that we are to calculate for each period NOTICE: these can be interpret as wheights put on each period. But it does NOT need to summarize to 1, it can be above and below \\(\\epsilon_{1-q}\\) = The error (residual) for each period Process: Select order of 1 Calculate coefficients for each lagged period Forecast using the coefficients Evaluate constantly if the coefficients are still applicable Then how do we select an apporpriate number of lags to be included? The autocorrelation function (ACF): selection criteria: the ACF should decline to zero exponentially fast The partial autocorelation function (PACF) "],["model-building-process.html", "7.2 Model Building Process", " 7.2 Model Building Process The Box-Jenkins model-building strategy. It has th following steps Model Identification Assessment for stationarity - can be done with ACF correlogram. If found, then use difference, hence ARIMA Identify what form of model to be used, e.g., MA, ARMA, ARIMA, or AR. This is done by assessing the time-series’ ACF (see examples on page 357 - 359) Model Specification: This is estimating model parameters Model Checking Make model diagnostics: Residuals to be random, no autocorelation left in them. Can also be checked with Ljung-Box Q stats No heteroskedasticity No spike in the ACF, must be within \\(±2/\\sqrt{n}\\) confidence interval from 0. If several model. Choose the one with the lowest AIC or BIC, depending on the goal. if that concludes indecisive result, then choose the simplest model (principle of parsimony) Forecasting with the Model "],["advantages-and-disadvantages-for-arima-models.html", "7.3 Advantages and disadvantages for ARIMA models", " 7.3 Advantages and disadvantages for ARIMA models Advantages: Box-Jenkins is a stable tool to get a model for short term accurate forecasts The model is flexible, but dont be fooled by complexity Formal testing procedures are available, such as AIC, BIC etc. Disadvantages: Large amount of data is needed Each time new data arrives, the model must be estimated again. That is because the parameters follow the most recent information. Construction is based on trial and error "],["adl.html", "7.4 ADL", " 7.4 ADL Basically ADL is doing and Autoregressive (AR) model and then we add another variable, that is lagged. Notice that we can model with the order of lagged variables to be included in the model. Hence we have the following equation: \\[ADL_{(p,q)}\\] Where p = the order of AR q = the number of variables included with the lagged added timeseries Procedure: Create the AR model Find the other relevant variable. Transform it to a timeseries using, ts() Include the lags in the model using lag(&lt;ts.object&gt;,&lt;number of lags&gt;) Example of how it may look: # GDPGR_ADL22 &lt;- dynlm(GDPGrowth_ts ~ #The dependant variable # L(GDPGrowth_ts) #The AR(1),The dependant variable lagged # + L(GDPGrowth_ts, 2) #The AR(2),The dependant variable lagged # + L(TSpread_ts) #Another TS lagged # + L(TSpread_ts, 2) #Another TS lagged two periods # ,start = c(1962, 1), end = c(2012, 4)) #TB3MS &lt;- xts(USMacroSWQ$TB3MS, USMacroSWQ$Date)[&quot;1960::2012&quot;] "],["exercises-3.html", "7.5 Exercises", " 7.5 Exercises 7.5.1 IBM stock, problem 12 p 405 Qa The data in Table P-12 are weekly prices for IBM stock. #Loading y &lt;- read_excel(&quot;Data/Week47/IBMstock.xls&quot;) %&gt;% ts(frequency = 52) #Plotting ts.plot(y) Figure 7.1: IBM stock prices It is dififult to say if there is a trend, but there appear to be seasons. This can be futher expected with the correlogram acf(x = y ,lag.max = 52) #We take for a whole year Figure 7.2: Correlogram (acf) IBM Stock prices The correlogram suggests that there is seasonality in the data. We only have data for one year, hence 52 periods. It would be interesting to see if the patterns express it self over years. We could also express the pacf. The partial correlation coefficient is estimated by fitting autoregressive models of successively higher orders up to lag.max. pacf(x = y ,lag.max = 52) #We take for a whole year Figure 7.3: Correlogram (pacf) IBM Stock prices What approaches does this suggest? It suggests, that we should use an AR model, as the acf is tending towards 0 while the pacf quickly drops to 0. Qb Looking at the ts plot, the data does not appear to be stationary. Perhaps there is a small indication of a trend in the data, hence not constant variance around a fixed point. It therefore suggests that we move into ARIMA, where we apply d order differencing. Qc We apply AR and d, where we first try with first order, to assess if it is sufficient. p &lt;- 0 #AR order d &lt;- 1 #Differencing order q &lt;- 0 #MA order order &lt;- c(p,d,q) ARIMAmod &lt;- arima(x = y #The time-series ,order = order ) #Assessing in-samp accuracy accuracy(object = fitted(ARIMAmod) ,x = y) ## ME RMSE MAE MPE MAPE ACF1 Theil&#39;s U ## Test set 0.7166731 6.090774 4.793596 0.2270925 1.759575 0.2971583 1 We see an mean percentage error of 1,64%. That is quite low. But also expected as it is in sample. plot(ARIMAmod$residuals,ylab = &quot;Residuals&quot;) Figure 7.4: Residuals plot IBM stock ARIMA 1,1,0 The changes appear to be randomly distributed around 0. Qd Perform diagnostic checks to determine the adequacy of your fitted model Residuals to be random We see from the residuals plot above. It was difficult to get rid of heteroskedasticity Note, it was tested with only differencing, and appear to have a more constant variance with this but we still see something indicating that the variance is not entirely constant Constant variance This can also be checked using a Ljung-Box test, where the null hypothesis is that there is no relationship between the observations. Box.test(ARIMAmod$residuals ,fitdf = p+q) #Because it is applied to and ARIMA model ## ## Box-Pierce test ## ## data: ARIMAmod$residuals ## X-squared = 4.5918, df = 1, p-value = 0.03213 We see that the p-value is below the p-value (5%), hence the model is under misspecification. Although we are close to the threshold, let us assume that it is sufficient. Autocorrelation in residuals We see that the errors appear not to show autocorrelation. Although there is one period, that does appear to have a spike + the first lagged period, but it is close to the recommended threshold. acf(ARIMAmod$residuals) Then one could test other models and see if they perform better. I have been playing around with the orders, but it does not appear to help with the residuals. Qd Make forecast for the stock price in week 1. { forecast(object = ARIMAmod,h = 1) %&gt;% print() y[nrow(y),] %&gt;% print() } ## Point Forecast Lo 80 Hi 80 Lo 95 Hi 95 ## 2 304 296.1184 311.8816 291.9461 316.0539 ## IBM ## 304 We see that the forecast is 311,73 where the naive forecast (the most recent period) would just say 304. Although one must be very precautions, as it was found that the model is under misspecification rm(list = ls()) 7.5.2 Demand data, problem 7 p 403 Loading the data df &lt;- read_excel(&quot;Data/Week47/Demand.xls&quot;) y &lt;- ts(data = df,frequency = 52) Qa Plotting acf acf(y,lag.max = 52) Figure 7.5: acf Demand We see that there is clearly a trend and it appears as if we have seasons, although looking at it does not appear as if we have seasons. We can support this with a pacf pacf(y) We are able to use an autoregressive approach as acf tends towards 0 and pacf quickly drops to 0. Lastly we can check for stationarity. ts.plot(y) Figure 7.6: Demand time-series We observe non stationary data, hence we should apply differencing as well. Qb Manually doing ARIMA p = 1 d = 1 q = 0 order &lt;- c(p,d,q) ARIMAmod &lt;- arima(x = y ,order = order) plot(ARIMAmod$residuals) Figure 7.7: Residuals ARIMA Auto ARIMA We are also able to apply auto.arima() to find the most optimal combination based on the sample data. # Making the model ts.arima &lt;- auto.arima(y = y) summary(ts.arima) ## Series: y ## ARIMA(2,1,1) with drift ## ## Coefficients: ## ar1 ar2 ma1 drift ## -0.3531 -0.4859 -0.8662 0.7106 ## s.e. 0.1461 0.1399 0.1214 0.0101 ## ## sigma^2 estimated as 0.7302: log likelihood=-63.77 ## AIC=137.54 AICc=138.87 BIC=147.2 ## ## Training set error measures: ## ME RMSE MAE MPE MAPE MASE ## Training set -0.04310129 0.8124002 0.6510066 -0.2215986 1.820533 NaN ## ACF1 ## Training set 0.005108341 We see that the this suggest a full ARIMA model with 2 order AR, 1 order differencing and 1 order MA. Now we can display the residuals to check for independence within the error terms. tsdisplay(ts.arima$residuals) Figure 7.8: Residuals time-series demand It appears as if with have independence in the residuals and also none significant spikes in the correlograms. We can make a statistical check for this as well, using the Box-Pierce test Box.test(ts.arima$residuals) ## ## Box-Pierce test ## ## data: ts.arima$residuals ## X-squared = 0.0013569, df = 1, p-value = 0.9706 We see that we cannot reject the null hypothesis, hence it is fair to assume that the observations are independent of each other. Qc equation for forecast: Cant find the constant, but one can call the coefficients with the following: ts.arima[[&quot;coef&quot;]] ## ar1 ar2 ma1 drift ## -0.3530653 -0.4859323 -0.8662332 0.7105675 Qd Forecasting demand for the coming four periods. That can be done using forecast() where h = 4 arima.fh4 &lt;- forecast(ts.arima ,h = 4 #Forecast horizon ,level = 0.95 #Confidence interval ) knitr::kable(arima.fh4,caption = &quot;Forecast with confidence intervals&quot;) Table 7.1: Forecast with confidence intervals Point Forecast Lo 95 Hi 95 2.000000 57.13051 55.45568 58.80534 2.019231 57.94525 56.23062 59.65988 2.038462 59.16331 57.38801 60.93861 2.057692 59.64408 57.78105 61.50711 plot(arima.fh4,xlim = c(1.8,2.2)) grid(col = &quot;lightgrey&quot;) rm(list = ls()) 7.5.3 Closing stock quotations, problem 13 p 409 df &lt;- read_excel(&quot;Data/Week47/ClosingStockQuatations.xls&quot;) y &lt;- ts(df,frequency = 365) y.train &lt;- y[1:145] y.test &lt;- y[146:150] ts.arima &lt;- auto.arima(y.train) tsdiag(ts.arima) Figure 7.9: Diagnostics for ARIMA We see that the residuals appear to be randomly distributed around a fixed point. Also there does not appear to be residuals that spikes, indicating autocorrelation in the residuals. Assessing the Ljung-Box statistic, we see that there are no values that go beyond the critical level of 5%. Hence it is fair to assume that the residuals are independent of each other. arima.fh5 &lt;- forecast(ts.arima,h = 5,level = 0.95) knitr::kable(arima.fh5,caption = &quot;Forecast with confidence level&quot;) Table 7.2: Forecast with confidence level Point Forecast Lo 95 Hi 95 146 133.8119 128.8361 138.7878 147 133.8119 128.6346 138.9893 148 133.8119 128.4407 139.1832 149 133.8119 128.2535 139.3704 150 133.8119 128.0724 139.5515 plot(arima.fh5,xlim = c(100,157)) grid(col = &quot;lightgrey&quot;) Figure 7.10: Forecast Stock Quotations accuracy(arima.fh5$mean,x = y.test) ## ME RMSE MAE MPE MAPE ## Test set 2.508054 3.000656 2.508054 1.82561 1.82561 We see that the accuracy is 2.5 MAE where the MAPE is 1.8 7.5.4 HW: Case 1 page 413-414 (q1-3) Not done 7.5.5 HW: Case 4 page 417-419 Not done 7.5.6 Sales data seasonal Not done Arima(y = y,model = ) ## Series: y ## ARIMA(0,0,0) with non-zero mean ## ## Coefficients: ## mean ## 135.9627 ## s.e. 0.2571 ## ## sigma^2 estimated as 9.985: log likelihood=-384.92 ## AIC=773.84 AICc=773.93 BIC=779.86 "],["communicating-technical-findings.html", "8 Communicating Technical Findings", " 8 Communicating Technical Findings This chapter is about efficient report writing Litteratur Link to article: https://www.wgtn.ac.nz/learning-teaching/support/approach/steps-to-teaching-success/resources/WSBG-report-writing-guide-2017.pdf Lectures Lecture 6 The following path contain a folder with a template for reports: Business Forecasting/Week 46 Simple Linear Regression/BusinessReportRMD "],["Methods.html", "9 Methods and Performance Measurement ", " 9 Methods and Performance Measurement "],["ForecastMethods.html", "9.1 Forecasting Methods", " 9.1 Forecasting Methods Naive forecasts This is merely the current period is assumed to be the best predictor for the future, hence it can be written as: \\[\\begin{equation} \\hat{Y}_{t+1}=Y_t \\tag{9.1} \\end{equation}\\] where, \\(Y_t\\) = the last period, hence \\(\\hat{Y}_{t+1}\\) = the following period. Therefore, the error can merely be written as: \\(e_t=Y_{t+1}-\\hat{Y}_{t+1}\\), being the actual amount compared with the foretasted value. One can make several iterations to account for trending, the growth rate, or seasonal data. Those being: \\(\\hat{Y}_{t+1}=Y_t+(Y_t-Y_{t-1})\\), to account for trending data (non stationary data) \\(\\hat{Y}_{t+1}=Y_t * \\frac{Y_t}{Y_{t-1}}\\), to account for the growth rate, notice that it only assess the growth rate to the prior period. \\(\\hat{Y}_{t+1}=Y_{t-3}+\\frac{Y_t-Y_{t-4}}{4}\\), to account for quarterly trending data, the periods can naturally be changed by changing the formula, e.g. to 12. but notice, that this is just replicating previous periods, hence also previous seasons 9.1.1 Using Averages We have the following: Simple averages, which merely takes the average of all observations. Moving averages, which account for the given time frame. This can be extended by, Double moving averages, often seen when you need the center value of a period consisting of an even number of periods, where there is no actual median value, thus one can extend the MA with a double MA. 9.1.1.1 Simple Averages One may assume that it is sufficient to apply the average of all observations, to predict the next period, hence we can say: \\[\\begin{equation} \\hat{Y}_{t+1}=\\frac{1}{n}\\sum^t_{i=1}Y_i \\tag{9.2} \\end{equation}\\] This is appropriate if the data has shown historical stability, thus without seasons, trends and etc. 9.1.1.2 Moving Average (MA) One may apply a moving average instead, accounting for k periods, also one could extend this by adding weights. For practical purposes only a k period MA is show: \\[\\begin{equation} \\hat{Y}_{t+1}=\\frac{Y_t+Y_{t-1}+...+Y_{t-k}}{k} \\tag{9.3} \\end{equation}\\] this may be applied to remove seasonal effect, either by k=4 or 12 if the data is respectively quarterly or monthly 9.1.1.3 Double Moving Average This is simply doing moving averages twice, hence it is an extension of equation (9.3) As mentioned, often seen when one wants the median when using an even number of periods, e.g. 12 months, hence double MA can be applied. \\[\\begin{equation} M_t=\\hat{Y}_{t+1}=\\frac{Y_t+Y_{t-1}+...+Y_{t-k+1}}{k} \\tag{9.4} \\end{equation}\\] \\[\\begin{equation} M&#39;_t=\\frac{M_t+M_{t-1}+...+M_{t-k+1}}{k} \\tag{9.5} \\end{equation}\\] \\[\\begin{equation} a_t=M_t+\\left(M_t-M_t\\right) \\end{equation}\\] \\[\\begin{equation} b_t=\\frac{2}{k-1}\\left(M_t-M&#39;_t\\right) \\end{equation}\\] Thence we are able to say: \\[\\begin{equation} \\hat{Y}_{t+p}=a_t+b_t*p \\tag{9.6} \\end{equation}\\] 9.1.2 Linear regressions Linear regression with a trend: that is normal linear regression, where the trend is added as a counter, which will account for the trend, given it is linear. Linear regression with seasonal dummies and a trend: That is making dummy variables for each period, using seasonaldummary(), to have a variable accounting for each period. The you can add a trend variable seq(1,n,1), e.g., linear counter, when having linear trend. See 6.4.2 9.1.3 Non linear regressions Non linear regression with trend Causal regression 9.1.4 Smoothing methods 9.1.4.1 Exponential smoothing This is exponentially weighted moving average of all historical values, meaning that the most recent value will be assigned the most weight. Hence we merely add different weights to past periods, thus there is no specific way to adjust for trend and seasonality, which is a limitation of exponential smoothing, it can be written as: \\[\\begin{equation} \\hat{Y}_{t+1}=\\alpha Y_t+\\left(1-\\alpha\\right)\\hat{Y}_t \\end{equation}\\] thus: \\[\\begin{equation} =\\hat{Y}_t+\\alpha(Y_t-\\hat{Y}_t) \\end{equation}\\] Where \\(\\alpha\\) = the smoothing constant, thus is can be between 0 and 1. The higher alpha the largest weight to the most recent observation. Then how to choose the smoothing parameter \\(\\alpha\\)? For stable predictions, choose a high alpha For sensitive predictions, choose low alpha Test different alpha values and compare the models using the performance measures in section 9.2. 9.1.4.2 Holt’s exponential smoothing Exponential smoothing method with adjustment for trend, hence we introduce a new tuning parameter, hence we have \\(\\alpha\\) and \\(\\beta\\) \\(\\alpha\\) = Weight to the most recent observations \\(\\beta\\) = adjustment for trend. R will automatically set this, when beta = TRUE Hence the smoothing now consists of two elements: The level estimate \\[\\begin{equation} L_t=\\alpha Y_t+\\left(1-\\alpha\\right)\\left(L_{t-1}+T_{t-1}\\right) \\tag{9.7} \\end{equation}\\] The trend estimate \\[\\begin{equation} T_t=\\beta\\left(L_t-L_{t-1}\\right)+\\left(1-\\beta\\right)T_{t-1} \\tag{9.8} \\end{equation}\\] Thus, the forecasting of p periods into the future, can be explained by: \\[\\begin{equation} \\hat{Y}_{t+p}=L_t+pT_t \\tag{9.9} \\end{equation}\\] To apply: use HoltWinters() and select parameters that lowers the performance measurements. When one assigns large weights the model will become more sensitive to changes in the observed data. One can either set the initial value to 0 or take the average of the first few observations. If \\(\\alpha = \\beta\\), then we have the Brown’s double exponential smoothing model. If \\(\\beta\\) = 0, then we merely have a simple exponential smoothing. 9.1.4.3 Winters’ exponential smoothing Exponential smoothing method with adjustment for trend and seasonality, hence we introduce two new tuning parameters, hence we have \\(\\alpha\\), \\(\\beta\\) (as in Holt’s) and \\(\\gamma\\) Hence the smoothing now consists of three elements: The level estimate \\[\\begin{equation} L_t=\\alpha\\frac{Y_t}{S_{t-s}}+\\left(1-\\alpha\\right)\\left(L_{t-1}+T_{t-1}\\right) \\tag{9.10} \\end{equation}\\] The trend estimate \\[\\begin{equation} T_t=\\beta\\left(L_t-L_{t-1}\\right)+\\left(1-\\beta\\right)T_{t-1} \\tag{9.11} \\end{equation}\\] The seasonality estimate \\[\\begin{equation} S_t=\\gamma\\frac{Y_t}{L_t}+\\left(1-\\gamma\\right)S_{t-s} \\tag{9.12} \\end{equation}\\] Thus, the forecasting of p periods into the future, can be explained by: \\[\\begin{equation} \\hat{Y}_{t+p}=\\left(L_t+pT_t\\right)S_{t-s+p} \\tag{9.13} \\end{equation}\\] To apply: use HoltWinters() and select parameters that lowers the performance measurements. When one assigns large weights the model will become more sensitive to changes in the observed data. One can either set the initial value to 0 or take the average of the first few observations. if \\(\\beta = \\gamma = 0\\) the model is merely simple exponential smoothing. 9.1.4.4 Moving Averages, see section 9.1.1.2 9.1.5 ARIMA Decomposition of the time series AR: MA: ARMA: ARIMA: "],["PerformanceMeasurements.html", "9.2 Performance Measurements", " 9.2 Performance Measurements 9.2.1 Error terms Mean error (ME): \\[\\begin{equation} ME=\\frac{1}{n}\\sum_{ }^{ }\\left(Y_t-\\hat{Y}_t\\right)$ \\tag{9.14} \\end{equation}\\] Mean Absolute Deviation (error): \\[\\begin{equation} MAD\\left(i.e.\\ MAE\\right)\\ =\\ \\frac{1}{n}\\cdot\\sum_{ }^{ }\\left|Y_t-\\hat{Y}_t\\right| \\tag{9.15} \\end{equation}\\] Mean Percentage Error (MPE): \\[\\begin{equation} MPE\\ =\\ \\frac{1}{n}\\ \\sum_{ }^{ }\\frac{\\left(Y_t-\\hat{Y}_t\\right)}{Y_t} \\tag{9.16} \\end{equation}\\] Mean Absolute Percentage Error (MAPE): \\[\\begin{equation} MAPE\\ =\\ \\frac{1}{n}\\ \\sum_{ }^{ }\\frac{|\\left(Y_t-\\hat{Y}_t\\right)|}{|Y_t|} \\tag{9.17} \\end{equation}\\] Mean-Squared Error (MSE): \\[\\begin{equation} MSE=\\frac{1}{n}\\sum_{ }^{ }(Y_t-\\hat{Y}_t)^2 \\tag{9.18} \\end{equation}\\] Root Mean-Squared Error: \\[\\begin{equation} RMSE=\\sqrt{MSE} \\tag{9.18} \\end{equation}\\] 9.2.2 Multicollinearity VIF \\[\\begin{equation} VIF_j=\\frac{1}{1-R_j^2} \\tag{5.7} \\end{equation}\\] Where \\(j = 1,...,k\\) Thus, we see that Rsquare is obtained from regression each IDV against the remaining variables. We can then have the following outputs: VIF = 1, no milticollinearity VIF &gt; 10, indicates multicollinearity If one gets an indication of multicollinearity, then one should drop one of the correlated variables. "],["formulas.html", "9.3 Formulas", " 9.3 Formulas auto.arima() from forecast package, automize the orders and drift. With possibility to select ic and selection method (stepwise vs. non stepwise) tsdisplay() from forecast package, does acf, pacf and residuals, if the timeseries$residuals are made as input diff() does desired order of differencing Arima(), practically does the same. Although we are able to call another model, hence other coefficients, thus the coefficients will not be estimated again That is pretty useful!!! "],["loops.html", "9.4 Loops!!!!", " 9.4 Loops!!!! 9.4.1 HoltWinters Smoothing - finding optimal frequency This is develop by anton # y &lt;- read_excel(&quot;prob8p92HW.xlsx&quot;) # #&#39; *set up list of different possible seasonality components* # m &lt;- list() # m[[1]] &lt;- 2 # m[[2]] &lt;- 4 # #&#39; *run loop calculating RMSE for winters exponential smoothing with different frequencies* # RMSE &lt;- matrix(0,length(m),1) # for (i in seq(length(m))) # { # yt &lt;- ts(y, frequency = m[[i]]) # fit &lt;- HoltWinters(yt # ,alpha=0.6 #setting alpha # ,beta=TRUE #trend # ,gamma=TRUE) #seasonality # for.fit &lt;- forecast(fit) # acc.fit &lt;- accuracy(for.fit) # RMSE[i,1] &lt;- acc.fit [1,2] #putting RMSE for different frequencies in matrix # } # #&#39; *finding frequency with smallest RMSE* # best.freq &lt;- which.min(RMSE) # best.freq &lt;- m[best.freq] # best.freq 9.4.2 ARIMA - it is not really that useful, does not have all combinations Testing different orders # #Insert data as timeseries # y &lt;- read_excel(&quot;Data/Week47/IBMstock.xls&quot;) %&gt;% ts(frequency = 52 # #,start = # ) # #Import matrix of differencing combinations # OrderMatrix &lt;- read_excel(&quot;Data/Week47/OrdersMatrix.xlsx&quot;) # # { # RMSE &lt;- as.matrix(0) # boxtest &lt;- as.matrix(0) # # for (i in seq(from = 1,to = nrow(OrderMatrix),by = 1)) { # # print(i) # p &lt;- as.numeric(OrderMatrix[i,1]) #AR order # d &lt;- as.numeric(OrderMatrix[i,2]) #Differencing order # q &lt;- as.numeric(OrderMatrix[i,3]) #MA order # order &lt;- c(p,d,q) # # ARIMAmod &lt;- arima(x = y #The time-series # ,order = order # ) # # #Assessing in-samp accuracy RMSE # RMSE[i] &lt;- accuracy(object = fitted(ARIMAmod),x = y)[2] #2 for RMSE # # #Storing hypothesis test of independence # boxtest[i] &lt;- Box.test(ARIMAmod$residuals # ,fitdf = p+q)$p.value #Because it is applied to and ARIMA model # } # # #The optimal combination based on the highest Box-Pierce test (similar to Ljung-Box) # OrderMatrix[which.max(boxtest),] # } "]]
